name: Deploy Todo App

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1  # change to your region

      # ---- Build & Push Backend Images ----
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push API Image
        run: |
          docker build -t todo-api ./Backend/api
          docker tag todo-api:latest ${{ steps.login-ecr.outputs.registry }}/todo-api:latest
          docker push ${{ steps.login-ecr.outputs.registry }}/todo-api:latest

      - name: Build and Push Worker Image
        run: |
          docker build -t todo-worker ./Backend/worker
          docker tag todo-worker:latest ${{ steps.login-ecr.outputs.registry }}/todo-worker:latest
          docker push ${{ steps.login-ecr.outputs.registry }}/todo-worker:latest

      # ---- Deploy Backend on EC2 ----
      - name: Deploy on EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull ${{ steps.login-ecr.outputs.registry }}/todo-api:latest
            docker pull ${{ steps.login-ecr.outputs.registry }}/todo-worker:latest
            docker-compose -f ~/docker-compose.yml up -d

      # ---- Deploy Frontend on S3 + CloudFront ----
      - name: Build Frontend
        run: |
          cd Frontend
          npm install
          npm run build

      - name: Sync to S3
        run: |
          aws s3 sync Frontend/dist s3://my-frontend-bucket --delete

      - name: Invalidate CloudFront Cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_ID }} \
            --paths "/*"
