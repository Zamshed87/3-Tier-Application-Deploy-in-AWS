services:
  db:
    image: postgres:15
    container_name: local-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: todos
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 10

  redis:
    image: redis:7
    container_name: local-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 10

  elasticmq:
    image: softwaremill/elasticmq-native:1.4.0
    container_name: local-elasticmq
    ports:
      - "9324:9324"
    volumes:
      - ./elasticmq.conf:/opt/elasticmq.conf
    command: ["-Dconfig.file=/opt/elasticmq.conf"]
    healthcheck:
      # TCP check instead of HTTP to avoid localhost issues
      test: ["CMD-SHELL", "nc -z 0.0.0.0 9324 || exit 1"]
      interval: 5s
      retries: 20

  api:
    build:
      context: ../../Backend/api
    container_name: local-api
    ports:
      - "${API_PORT}:3001"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticmq:
        condition: service_healthy
    entrypoint: ["/app/wait-for-queues.sh"]
    command: ["python", "app.py"]

  worker:
    build:
      context: ../../Backend/worker
    container_name: local-worker
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticmq:
        condition: service_healthy
    command: ["python", "worker.py"]
